{"version":3,"sources":["BtnSelect.tsx","index.tsx"],"names":["MyComponent","state","current","undefined","onClicked","idx","setState","prevState","Streamlit","setComponentValue","document","body","style","background","options","this","props","args","nav","defaultIndex","Wrapper","theme","base","className","map","option","onClick","disabled","key","StreamlitComponentBase","withStreamlitConnection","ReactDOM","render","StrictMode","BtnSelect","getElementById"],"mappings":"sQAaMA,G,kNACGC,MAAQ,CAAEC,aAASC,G,EAkClBC,UAAY,SAACC,GACnB,EAAKC,UACH,SAAAC,GAAS,MAAK,CAAEL,QAASG,MACzB,kBAAMG,IAAUC,kBAAkBJ,O,uDAnCtC,WACE,0EACAK,SAASC,KAAKC,MAAMC,WAAa,gB,oBAGnC,WAAqB,IAAD,eAEZC,EAAoBC,KAAKC,MAAMC,KAAX,QACpBC,EAAeH,KAAKC,MAAMC,KAAX,IACfE,EAAuBJ,KAAKC,MAAMC,KAAX,QAGvBf,EAAe,UAAGa,KAAKd,MAAMC,eAAd,QAAyBiB,EACxCC,EAAUF,EAAM,MAAQ,MACxBG,EAAa,oBAAGN,KAAKC,aAAR,iBAAG,EAAYK,aAAf,aAAG,EAAmBC,YAAtB,QAA8B,QAEjD,OACE,kBAACF,EAAD,CAASG,UAAU,WAChBT,EAAQU,KAAI,SAACC,EAAQpB,GAAT,OACX,4BACEqB,QAAS,kBAAM,EAAKtB,UAAUC,IAC9BkB,UAAWF,EACXM,SAAUtB,IAAQH,EAClB0B,IAAKvB,GAEJoB,W,GA5BaI,MAgDXC,cAAwB9B,GCzDvC+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,OAEFxB,SAASyB,eAAe,W","file":"static/js/main.48aca1b0.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\nimport './custom.css'\n\ninterface State {\n  current: number | undefined\n}\n\nclass MyComponent extends StreamlitComponentBase<State> {\n  public state = { current: undefined }\n\n  componentDidMount(): void {\n    super.componentDidMount()\n    document.body.style.background = 'transparent'\n  }\n\n  render(): ReactNode {\n    // Arguments\n    const options: string[] = this.props.args['options']\n    const nav: boolean = this.props.args['nav']\n    const defaultIndex: number = this.props.args['default']\n\n    // Computed values\n    const current: number = this.state.current ?? defaultIndex\n    const Wrapper = nav ? 'nav' : 'div'\n    const theme: string = this.props?.theme?.base ?? 'light'\n\n    return (\n      <Wrapper className=\"wrapper\">\n        {options.map((option, idx) => (\n          <button\n            onClick={() => this.onClicked(idx)}\n            className={theme}\n            disabled={idx === current}\n            key={idx}\n          >\n            {option}\n          </button>\n        ))}\n      </Wrapper>\n    )\n  }\n\n  private onClicked = (idx: number): void => {\n    this.setState(\n      prevState => ({ current: idx }),\n      () => Streamlit.setComponentValue(idx)\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(MyComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport BtnSelect from \"./BtnSelect\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BtnSelect />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}